{"componentChunkName":"component---src-templates-blog-post-js","path":"/typescript/","result":{"data":{"site":{"siteMetadata":{"title":"凌羡"}},"markdownRemark":{"id":"3862933b-c7fd-5fc6-838d-c7b92be50159","excerpt":"自定义hooks 自定义hooks，如果返回的数组类型，则必须明确的表明返回的数据状态，否则返回的数据数据类型完全一致 枚举类型的数据使用 通用的一个场景就是：根据后端返回的任务状态码显示对应的中文状态","html":"<h3>自定义hooks</h3>\n<blockquote>\n<p>自定义hooks，如果返回的数组类型，则必须明确的表明返回的数据状态，否则返回的数据数据类型完全一致</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// 🙅‍♂️错误示例\nfunction useFetch() {\n\tconst [loading,setLoading] = useState(false);\n\tconst [data,setData] = useState({});\n\n\tuseEffect(() =&gt; {\n\t\t// hooks使用async/await可以在内部定义一个函数\n\t\tconst fetchData = async () =&gt; {\n\t\t\tlet result = await axios(config);\n\t\t\tsetLoading(true);\n\t\t\tsetData(result);\n\t\t}\n\t}, [])\n\n\treturn [loading,data]\n}\n\n// 使用过程\n\nfunction App() {\n\t// 此时会提示loading的数据类型为：boolean | {}\n\tconst [loading,data] = useFetch(**);\n\n\treturn  &lt;div&gt;1212&lt;/div&gt;\n}\n\n// 显式的声名自定义hooks的返回数据类型就解决问题\nfunction useFetch(): [boolean,Object] {\n\t// 上述代码\n}</code></pre></div>\n<h3>枚举类型的数据使用</h3>\n<blockquote>\n<p>通用的一个场景就是：根据后端返回的任务状态码显示对应的中文状态</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// 如果不表明taskType的类型，下面的程序就会报错\nexport const taskType = {\n    &#39;0&#39;: &#39;草稿&#39;,\n    &#39;1&#39;: &#39;完成&#39;,\n    &#39;2&#39;: &#39;失效&#39;,\n}\n// 对应antd表格中\nconst columns= [\n\t{\n\t\ttitle: &quot;任务状态&quot;,\n\t\tkey: &#39;taskType&#39;,\n\t\trender: (text:any, record:any) =&gt; (\n\t\t\t\t// expression of type &#39;number&#39; can&#39;t be used to index type\n        &lt;span&gt;{taskType[text]}&lt;/span&gt;\n    )\n\t}\n];\n\n// 方案一：\ninterface TaskType {\n\t[key:string]: string\n}\n\nexport const taskType:TaskType = {\n    &#39;0&#39;: &#39;草稿&#39;,\n    &#39;1&#39;: &#39;完成&#39;,\n    &#39;2&#39;: &#39;失效&#39;,\n}\n\n// 使用枚举类型\nexport enum TaskType {\n\t&quot;草稿&quot;,\n\t&quot;完成&quot;,\n\t&quot;失效&quot;\n}</code></pre></div>","frontmatter":{"title":"Typescript踩坑笔记","date":"January 09, 2019","description":"记录使用Typescript开发React中遇到的一些坑"}}},"pageContext":{"slug":"/typescript/","previous":{"fields":{"slug":"/docker/"},"frontmatter":{"title":"从零开始学docker"}},"next":{"fields":{"slug":"/webpack/webpack-loader/"},"frontmatter":{"title":"webpack笔记（一）"}}}},"staticQueryHashes":["63159454","636771615"]}